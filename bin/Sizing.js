// Generated by CoffeeScript 1.12.6
(function() {
  var BASE_H, BASE_W, Builder, HEIGHT_PREFIX, Parser, Promise, TARGET_H, TARGET_W, WH_PREFIX, WIDTH_PREFIX, _, __SWAP__, convertH, convertW, fs, mkdirs, ref;

  _ = require('lodash');

  fs = require('fs');

  Promise = require('bluebird');

  ref = require('./XML'), Parser = ref.Parser, Builder = ref.Builder;

  mkdirs = require('mkdirs');

  TARGET_W = 0;

  TARGET_H = 0;

  BASE_W = 0;

  BASE_H = 0;

  __SWAP__ = function() {
    var tmpH, tmpW;
    tmpW = BASE_W;
    tmpH = BASE_H;
    BASE_W = TARGET_W;
    BASE_H = TARGET_H;
    TARGET_W = tmpW;
    return TARGET_H = tmpH;
  };

  __SWAP__();

  WIDTH_PREFIX = 'w_';

  HEIGHT_PREFIX = 'h_';

  WH_PREFIX = 'wh_';

  convertH = function(origin) {
    return _.round(origin * TARGET_H / BASE_H, 1);
  };

  convertW = function(origin) {
    return _.round(origin * TARGET_W / BASE_W, 1);
  };

  module.exports = function(arg) {
    var base, output, ref1, ref2, source, target;
    base = arg.base, source = arg.source, target = arg.target, output = arg.output;
    ref1 = base.split('*'), BASE_W = ref1[0], BASE_H = ref1[1];
    ref2 = target.split('*'), TARGET_W = ref2[0], TARGET_H = ref2[1];
    return Parser(fs.readFileSync(source, 'utf8')).then(function(arg1) {
      var afters, resources;
      resources = arg1.resources;
      afters = resources.dimen.map(function(d) {
        var measure, unit;
        measure = d['_'];
        base = measure.substring(0, measure.length - 2);
        unit = measure.substring(measure.length - 2);
        if (d['$'].name.startsWith(WIDTH_PREFIX)) {
          d['_'] = "" + (convertW(base)) + unit;
        } else if (d['$'].name.startsWith(HEIGHT_PREFIX)) {
          d['_'] = "" + (convertH(base)) + unit;
        } else {
          d['_'] = "" + (convertW(base)) + unit;
        }
        return d;
      });
      return Builder.buildObject(resources);
    }).then(function(xmlstr) {
      var dir;
      dir = output + "/values-sw" + TARGET_W + "dp/";
      mkdirs(dir);
      fs.writeFileSync(dir + "dimens.xml", xmlstr);
      return console.log("generated success! [" + dir + "]");
    })["catch"](function(err) {
      return console.log("generate failed. due to: " + err);
    });
  };

}).call(this);
